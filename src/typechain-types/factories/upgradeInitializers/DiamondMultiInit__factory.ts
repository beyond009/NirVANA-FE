/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DiamondMultiInit,
  DiamondMultiInitInterface,
} from "../../upgradeInitializers/DiamondMultiInit";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_addressesLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_calldataLength",
        type: "uint256",
      },
    ],
    name: "AddressAndCalldataLengthDoNotMatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initializationContractAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "InitializationFunctionReverted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "NoBytecodeAtAddress",
    type: "error",
  },
] as const;

const _bytecode =
  "0x61049261003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80636e02fa3c1461003a575b600080fd5b81801561004657600080fd5b5061005a61005536600461027c565b61005c565b005b82811461008b576040516339a070b360e11b815260048101849052602481018290526044015b60405180910390fd5b60005b838110156101305761011e8585838181106100ab576100ab6102e8565b90506020020160208101906100c091906102fe565b8484848181106100d2576100d26102e8565b90506020028101906100e4919061032e565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061013792505050565b8061012881610375565b91505061008e565b5050505050565b6001600160a01b038216610149575050565b61016b8260405180606001604052806028815260200161043560289139610203565b600080836001600160a01b03168360405161018691906103c0565b600060405180830381855af49150503d80600081146101c1576040519150601f19603f3d011682016040523d82523d6000602084013e6101c6565b606091505b5091509150816101fd578051156101e05780518082602001fd5b838360405163192105d760e01b8152600401610082929190610408565b50505050565b813b600081900361022b57828260405163919834b960e01b8152600401610082929190610408565b505050565b60008083601f84011261024257600080fd5b50813567ffffffffffffffff81111561025a57600080fd5b6020830191508360208260051b850101111561027557600080fd5b9250929050565b6000806000806040858703121561029257600080fd5b843567ffffffffffffffff808211156102aa57600080fd5b6102b688838901610230565b909650945060208701359150808211156102cf57600080fd5b506102dc87828801610230565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561031057600080fd5b81356001600160a01b038116811461032757600080fd5b9392505050565b6000808335601e1984360301811261034557600080fd5b83018035915067ffffffffffffffff82111561036057600080fd5b60200191503681900382131561027557600080fd5b60006001820161039557634e487b7160e01b600052601160045260246000fd5b5060010190565b60005b838110156103b757818101518382015260200161039f565b50506000910152565b600082516103d281846020870161039c565b9190910192915050565b600081518084526103f481602086016020860161039c565b601f01601f19169290920160200192915050565b6001600160a01b038316815260406020820181905260009061042c908301846103dc565b94935050505056fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f6465a26469706673582212204fa5aa8b9bc3a22a51cb00544b679a00be9d6b36acd54727822301c8a0f0015464736f6c63430008110033";

type DiamondMultiInitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondMultiInitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondMultiInit__factory extends ContractFactory {
  constructor(...args: DiamondMultiInitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondMultiInit> {
    return super.deploy(overrides || {}) as Promise<DiamondMultiInit>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondMultiInit {
    return super.attach(address) as DiamondMultiInit;
  }
  override connect(signer: Signer): DiamondMultiInit__factory {
    return super.connect(signer) as DiamondMultiInit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondMultiInitInterface {
    return new utils.Interface(_abi) as DiamondMultiInitInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondMultiInit {
    return new Contract(address, _abi, signerOrProvider) as DiamondMultiInit;
  }
}
