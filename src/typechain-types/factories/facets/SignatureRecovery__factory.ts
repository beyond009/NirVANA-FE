/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SignatureRecovery,
  SignatureRecoveryInterface,
} from "../../facets/SignatureRecovery";

const _abi = [
  {
    inputs: [],
    name: "Forbidden",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "MethodNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506106cb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063379f4e661461006b575b600080fd5b610057610049366004610568565b6001600160e01b0319161590565b604051901515815260200160405180910390f35b61007e6100793660046105af565b610080565b005b6001600160a01b0382166100d25760405162461bcd60e51b815260206004820152601460248201527366726f6d2061646472657373206973207a65726f60601b60448201526064015b60405180910390fd5b336001600160a01b03831681900361010857604051630cf0074f60e41b81526001600160a01b03821660048201526024016100c9565b600061017b7fa3280c6e21d7a0456e5284549dc362ae7d647aecf777f25074056d6f789fc785600601548584604051602001610160939291909283526001600160a01b03918216602084015216604082015260600190565b604051602081830303815290604052805190602001206101be565b90506001600160a01b0384166101918285610212565b6001600160a01b0316146101b857604051631dd2188d60e31b815260040160405180910390fd5b50505050565b600061020c6101cb610236565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b60008060006102218585610245565b9150915061022e8161028a565b509392505050565b60006102406103d7565b905090565b600080825160410361027b5760208301516040840151606085015160001a61026f878285856104a4565b94509450505050610283565b506000905060025b9250929050565b600081600481111561029e5761029e61067f565b036102a65750565b60018160048111156102ba576102ba61067f565b036103075760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016100c9565b600281600481111561031b5761031b61067f565b036103685760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016100c9565b600381600481111561037c5761037c61067f565b036103d45760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016100c9565b50565b7fa3280c6e21d7a0456e5284549dc362ae7d647aecf777f25074056d6f789fc787546000907fa3280c6e21d7a0456e5284549dc362ae7d647aecf777f25074056d6f789fc785906001600160a01b0316301480156104385750806001015446145b156104435754919050565b61049e8160050154826003015483600401546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b91505090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156104db575060009050600361055f565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561052f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166105585760006001925092505061055f565b9150600090505b94509492505050565b60006020828403121561057a57600080fd5b81356001600160e01b03198116811461059257600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156105c257600080fd5b82356001600160a01b03811681146105d957600080fd5b9150602083013567ffffffffffffffff808211156105f657600080fd5b818501915085601f83011261060a57600080fd5b81358181111561061c5761061c610599565b604051601f8201601f19908116603f0116810190838211818310171561064457610644610599565b8160405282815288602084870101111561065d57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220b1195b9a7d615ea0a2082407f0e4f96fe599097168cfa868dcaa4d54720d04c164736f6c63430008110033";

type SignatureRecoveryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignatureRecoveryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SignatureRecovery__factory extends ContractFactory {
  constructor(...args: SignatureRecoveryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SignatureRecovery> {
    return super.deploy(overrides || {}) as Promise<SignatureRecovery>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SignatureRecovery {
    return super.attach(address) as SignatureRecovery;
  }
  override connect(signer: Signer): SignatureRecovery__factory {
    return super.connect(signer) as SignatureRecovery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatureRecoveryInterface {
    return new utils.Interface(_abi) as SignatureRecoveryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignatureRecovery {
    return new Contract(address, _abi, signerOrProvider) as SignatureRecovery;
  }
}
